{"ast":null,"code":"var _jsxFileName = \"/Users/aanch/IAJES_Updated/client/src/components/viewProjects.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // to make API calls\n\nimport Modal from \"./Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ViewProjects = props => {\n  _s();\n\n  const [projectList, setProjectList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [modalData, setModalData] = useState(null);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/get\").then(response => {\n      setProjectList(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"View Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), projectList.map(val => {\n        const img_link = \"http://localhost:3001/images/\" + val.aws_image_link;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img_link,\n              width: \"259\",\n              height: \"194\",\n              onClick: () => setShow(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: val.project_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary btn-lg active\",\n              \"aria-pressed\": \"true\",\n              \"data-toggle\": \"modal\",\n              \"data-target\": \"#vertModal\",\n              \"data-whatever\": \"@getbootstrap\",\n              onClick: () => {\n                setModalData(val);\n                setShow(true);\n              },\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              modData: modalData,\n              onClose: () => setShow(false),\n              show: show\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ViewProjects, \"Ta5NvWS6u+7UBwXEZ84FNEMPD/g=\");\n\n_c = ViewProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProjects\");","map":{"version":3,"sources":["/Users/aanch/IAJES_Updated/client/src/components/viewProjects.jsx"],"names":["useState","useEffect","Axios","Modal","ViewProjects","props","projectList","setProjectList","show","setShow","modalData","setModalData","get","then","response","data","textAlign","map","val","img_link","aws_image_link","project_name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,KAAP,MAAkB,eAAlB;;;AAGA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACU,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC5DP,MAAAA,cAAc,CAACO,QAAQ,CAACC,IAAV,CAAd;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGV,WAAW,CAACW,GAAZ,CAAiBC,GAAD,IAAS;AACxB,cAAMC,QAAQ,GAAG,kCAAkCD,GAAG,CAACE,cAAvD;AACA,4BACE;AAAA,kCACE;AAAA,oCAEE;AACE,cAAA,GAAG,EAAED,QADP;AAEE,cAAA,KAAK,EAAC,KAFR;AAGE,cAAA,MAAM,EAAC,KAHT;AAIE,cAAA,OAAO,EAAE,MAAMV,OAAO,CAAC,IAAD;AAJxB;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE;AAAA,qCACE;AAAA,0BAAIS,GAAG,CAACG;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF,eAaE;AACE,cAAA,SAAS,EAAC,iCADZ;AAEE,8BAAa,MAFf;AAGE,6BAAY,OAHd;AAIE,6BAAY,YAJd;AAKE,+BAAc,eALhB;AAME,cAAA,OAAO,EAAE,MAAM;AACbV,gBAAAA,YAAY,CAACO,GAAD,CAAZ;AACAT,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACD,eATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eA2BE;AAAA;AAAA;AAAA;AAAA,oBA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA,oBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAiCE;AAAA,mCACG,QAAC,KAAD;AACC,cAAA,OAAO,EAAEC,SADV;AAEC,cAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD,CAFvB;AAGC,cAAA,IAAI,EAAED;AAHP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AA4CD,OA9CA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0DD,CArEM;;GAAMJ,Y;;KAAAA,Y","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // to make API calls\nimport Modal from \"./Modal/Modal\";\n\n\nexport const ViewProjects = (props) => {\n  const [projectList, setProjectList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [modalData, setModalData] = useState(null);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/get\").then((response) => {\n      setProjectList(response.data);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"container\">\n        <hr></hr>\n        <h2 style={{ textAlign: \"center\" }}>View Projects</h2>\n        {projectList.map((val) => {\n          const img_link = \"http://localhost:3001/images/\" + val.aws_image_link;\n          return (\n            <div>\n              <div>\n                \n                <img\n                  src={img_link}\n                  width=\"259\"\n                  height=\"194\"\n                  onClick={() => setShow(true)}\n                />\n\n                <p>\n                  <b>{val.project_name}</b>\n                </p>\n            \n                <button\n                  className=\"btn btn-secondary btn-lg active\"\n                  aria-pressed=\"true\"\n                  data-toggle=\"modal\"\n                  data-target=\"#vertModal\"\n                  data-whatever=\"@getbootstrap\"\n                  onClick={() => {\n                    setModalData(val);\n                    setShow(true);\n                  }}\n                >\n                  View Details\n                </button>\n\n                <br></br>\n                <br></br>\n\n              </div>\n\n              <div>\n                 <Modal\n                  modData={modalData}\n                  onClose={() => setShow(false)}\n                  show={show}\n                /> \n              </div>\n\n            </div>\n          );\n        })}\n        \n\n        \n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}